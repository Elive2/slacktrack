{"version":3,"sources":["logo.svg","components/UserTable.js","App.js","index.js"],"names":["APIURL","process","UserTable","props","state","error","isLoaded","users","fetch","then","response","json","resData","console","log","setState","userData","is_admin","is_bot","this","usrData","Table","id","dark","responsive","map","user","src","profile","image_32","scope","real_name","name","getType","deleted","React","Component","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,I,yCCaXA,EAASC,yC,IA0GEC,E,kDArFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,IALQ,E,gEASE,IAAD,OAClBC,MAAMR,GACHS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAI,WACZD,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZR,MAAOK,EAAO,MACdN,UAAU,OAGZ,SAACD,GACC,EAAKU,SAAS,CACZT,UAAU,EACVD,e,8BAMFW,GACN,OAAIA,EAASC,SACJ,QACCD,EAASE,OACV,MAEA,W,+BAID,IAAD,OACDb,EAAQc,KAAKf,MAAMC,MACnBe,EAAUD,KAAKf,MAAMG,MACrBD,EAAWa,KAAKf,MAAME,SAE5B,OADAO,QAAQC,IAAI,OAAQM,GACjBf,EAEC,iDAEQC,EAMR,8BACE,eAACe,EAAA,EAAD,CAAOC,GAAG,YAAYC,MAAI,EAACC,YAAU,EAArC,UACE,gCACE,+BACE,uBACA,oCACA,2CACA,0CACA,sCACA,8CAGJ,gCACGJ,EAAQK,KAAI,SAAAC,GAAI,OACf,+BACE,6BAA0B,qBAAKC,IAAKD,EAAKE,QAAQC,YAAxCH,EAAKJ,GAAK,OACnB,oBAAkBQ,MAAM,MAAxB,SAA+BJ,EAAKJ,IAA3BI,EAAKJ,IACd,6BAAiCI,EAAKK,WAA7BL,EAAKJ,GAAK,aACnB,6BAA4BI,EAAKM,MAAxBN,EAAKJ,GAAK,QACnB,6BAA4B,EAAKW,QAAQP,IAAhCA,EAAKJ,GAAK,QACnB,6BAA+BI,EAAKQ,QAAU,OAAS,SAA9CR,EAAKJ,GAAK,aANZI,EAAKJ,GAAG,kBAlBzB,iD,GAnDgBa,IAAMC,WChBfC,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,wBAGA,qBAAKhB,GAAG,qBAAR,SACE,cAAC,EAAD,UCLRiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.db79ebcb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","/*\nFile: UserTable.js\n\nDescription:\nThis file implements the main user table component which displays all the users\ncurrently synced from slack. It uses the reactstrap table. It fetches data from the\nflask API.\n\n*/\n\nimport React from 'react';\nimport { Table, Button } from 'reactstrap';\n\nlet APIURL = process.env.REACT_APP_API_URL + 'activeUsers' \n\nfunction fetchUsers() {\n  fetch(APIURL)\n    .then(response => response.json())\n    .then(data => {\n      console.log(\"success\")\n      console.log(data);\n      return data;\n    })\n    .catch(error => {\n      console.log(\"there was an error fetching users: \", error);\n      return;\n    });\n}\n\nfunction fetchUpdate() {\n  return\n}\n\nclass UserTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(APIURL)\n      .then(response => response.json())\n      .then(resData => {\n        console.log(\"success\")\n        console.log(resData);\n        this.setState({\n          users: resData['users'],\n          isLoaded: true\n        });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  getType(userData) {\n    if (userData.is_admin) {\n      return 'admin'\n    } else if(userData.is_bot) {\n      return 'bot'\n    } else {\n      return 'member'\n    }\n  }\n\n  render() {\n    const error = this.state.error;\n    const usrData = this.state.users;\n    const isLoaded = this.state.isLoaded;\n    console.log(\"data\", usrData)\n    if(error) {\n      return (\n        <div>Error Fetching</div>\n      )\n    } else if (!isLoaded) {\n      return (\n        <div>Loading...</div>\n      )\n    } else {\n      return (\n        <div>\n          <Table id=\"UserTable\" dark responsive>\n            <thead>\n              <tr>\n                <th></th>\n                <th>id</th>\n                <th>Full Name</th>\n                <th>Username</th>\n                <th>Role</th>\n                <th>Deleted</th>\n              </tr>\n            </thead>\n            <tbody>\n              {usrData.map(user => (\n                <tr key={user.id+'user'}>\n                  <td key={user.id + 'img'}><img src={user.profile.image_32}/></td>\n                  <td key={user.id} scope=\"row\">{user.id}</td>\n                  <td key={user.id + 'real_name'}>{user.real_name}</td>\n                  <td key={user.id + 'name'}>{user.name}</td>\n                  <td key={user.id + 'type'}>{this.getType(user)}</td>\n                  <td key={user.id + 'deleted'}>{user.deleted ? 'true' : 'false'}</td>\n                  </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      );\n    }\n  }\n}\n\nexport default UserTable;\n","import logo from './logo.svg';\nimport './App.css';\nimport UserTable from './components/UserTable.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        SlackTrack\n      </header>\n      <div id=\"centered-container\">\n        <UserTable/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}